---
interface Props {
    items: Array<[]>,
    lang: String
};

import LogoShort from '@components/LogoShort.astro';
import ButtonBurguer from '@components/vue/ButtonBurguer.vue';
import HeaderLink from '@components/HeaderLink.astro';

const { items, lang } = Astro.props;
---

<header id="header">
    <LogoShort href={`/${lang}/`} title="Home | robsonjunior.dev" />
    <nav>
        {
            items.map(item => {
                return (
                    <HeaderLink
                        href={item.href}
                        title={item.hrefTitle}
                        target={item.target}
                    >
                        {item.label}
                    </HeaderLink>
                )

            })
        }
    </nav>
    <ButtonBurguer client:only="vue" />
</header>

<script is:inline>
    (function keyCommandByPlatform() {
        const isMac = /(Mac)/i.test(navigator.userAgent);

        const keyCommand = document.querySelector('#keyCommandHead');
        if(isMac || !keyCommand) return;

        keyCommand.innerHTML = '^';
    })();

    (function () {
        let lastScrollTop = 0;
        let showHeader = true;
        let f = {};
        let header = document.querySelector("#header");

        f.up = function () {
            if (showHeader === true) return;
            header.style.top = '0';
            showHeader = true;
        };

        f.down = function () {
            if (showHeader === false) return;
            header.style.top = '-56px';
            showHeader = false;
        };

        window.addEventListener("scroll", function (e) {
            if (e.scrollY === lastScrollTop) return;

            let direction = this.scrollY < lastScrollTop ? "up" : "down";
            lastScrollTop = this.scrollY;

            if (typeof f[direction] !== "function") return;

            f[direction]();
        }, true);
    })();
</script>

<style lang="scss">
    @import '../../styles/breakpoints';

    header {
        width: 100%;
        height: 56px;
        margin: 0;
        padding: 0 2rem;
        background: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(10px);
        top: 0;
        z-index: 999;
        position: sticky;
        transition: var(--transition-all-ease-in-out);
        display: flex;
        justify-content: space-between;
    }

    nav {
        display: none;
        align-items: center;

        @include media-breakpoint-up('sd') {
            display: flex;
        }

        a {
            padding: .5rem 0.5rem;
            color: var(--median);
            border-bottom: 1px solid transparent;
            text-decoration: none;
            font-size: 0.8rem;

            &.active {
                text-decoration: none;
                color: var(--dark);
            }
        }
    }
</style>
